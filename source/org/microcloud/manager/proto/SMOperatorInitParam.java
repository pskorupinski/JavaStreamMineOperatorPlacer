package org.microcloud.manager.proto;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SMOperatorInitParam.proto

public final class SMOperatorInitParam {
  private SMOperatorInitParam() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SearchRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string host = 1;
    /**
     * <code>required string host = 1;</code>
     */
    boolean hasHost();
    /**
     * <code>required string host = 1;</code>
     */
    java.lang.String getHost();
    /**
     * <code>required string host = 1;</code>
     */
    com.google.protobuf.ByteString
        getHostBytes();

    // required int32 port = 2;
    /**
     * <code>required int32 port = 2;</code>
     */
    boolean hasPort();
    /**
     * <code>required int32 port = 2;</code>
     */
    int getPort();

    // optional string sourceName = 3;
    /**
     * <code>optional string sourceName = 3;</code>
     */
    boolean hasSourceName();
    /**
     * <code>optional string sourceName = 3;</code>
     */
    java.lang.String getSourceName();
    /**
     * <code>optional string sourceName = 3;</code>
     */
    com.google.protobuf.ByteString
        getSourceNameBytes();

    // required .SearchRequest.DataSourceImplType dataSourceImplType = 4;
    /**
     * <code>required .SearchRequest.DataSourceImplType dataSourceImplType = 4;</code>
     *
     * <pre>
     * which concrete class should be used
     * </pre>
     */
    boolean hasDataSourceImplType();
    /**
     * <code>required .SearchRequest.DataSourceImplType dataSourceImplType = 4;</code>
     *
     * <pre>
     * which concrete class should be used
     * </pre>
     */
    SMOperatorInitParam.SearchRequest.DataSourceImplType getDataSourceImplType();

    // required .SearchRequest.ReadPreferenceType readPreferenceType = 5;
    /**
     * <code>required .SearchRequest.ReadPreferenceType readPreferenceType = 5;</code>
     *
     * <pre>
     * read everything (incl. real-time data)
     * </pre>
     */
    boolean hasReadPreferenceType();
    /**
     * <code>required .SearchRequest.ReadPreferenceType readPreferenceType = 5;</code>
     *
     * <pre>
     * read everything (incl. real-time data)
     * </pre>
     */
    SMOperatorInitParam.SearchRequest.ReadPreferenceType getReadPreferenceType();

    // repeated .GeneralKey generalKeys = 6;
    /**
     * <code>repeated .GeneralKey generalKeys = 6;</code>
     *
     * <pre>
     * list of keys
     * </pre>
     */
    java.util.List<SMOperatorInitParam.GeneralKey> 
        getGeneralKeysList();
    /**
     * <code>repeated .GeneralKey generalKeys = 6;</code>
     *
     * <pre>
     * list of keys
     * </pre>
     */
    SMOperatorInitParam.GeneralKey getGeneralKeys(int index);
    /**
     * <code>repeated .GeneralKey generalKeys = 6;</code>
     *
     * <pre>
     * list of keys
     * </pre>
     */
    int getGeneralKeysCount();
    /**
     * <code>repeated .GeneralKey generalKeys = 6;</code>
     *
     * <pre>
     * list of keys
     * </pre>
     */
    java.util.List<? extends SMOperatorInitParam.GeneralKeyOrBuilder> 
        getGeneralKeysOrBuilderList();
    /**
     * <code>repeated .GeneralKey generalKeys = 6;</code>
     *
     * <pre>
     * list of keys
     * </pre>
     */
    SMOperatorInitParam.GeneralKeyOrBuilder getGeneralKeysOrBuilder(
        int index);

    // optional int32 partitionKey = 7;
    /**
     * <code>optional int32 partitionKey = 7;</code>
     */
    boolean hasPartitionKey();
    /**
     * <code>optional int32 partitionKey = 7;</code>
     */
    int getPartitionKey();

    // optional int32 timeLimitMin = 8;
    /**
     * <code>optional int32 timeLimitMin = 8;</code>
     */
    boolean hasTimeLimitMin();
    /**
     * <code>optional int32 timeLimitMin = 8;</code>
     */
    int getTimeLimitMin();
  }
  /**
   * Protobuf type {@code SearchRequest}
   */
  public static final class SearchRequest extends
      com.google.protobuf.GeneratedMessage
      implements SearchRequestOrBuilder {
    // Use SearchRequest.newBuilder() to construct.
    private SearchRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SearchRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SearchRequest defaultInstance;
    public static SearchRequest getDefaultInstance() {
      return defaultInstance;
    }

    public SearchRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SearchRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              host_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              port_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              sourceName_ = input.readBytes();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              SMOperatorInitParam.SearchRequest.DataSourceImplType value = SMOperatorInitParam.SearchRequest.DataSourceImplType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                dataSourceImplType_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              SMOperatorInitParam.SearchRequest.ReadPreferenceType value = SMOperatorInitParam.SearchRequest.ReadPreferenceType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                readPreferenceType_ = value;
              }
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                generalKeys_ = new java.util.ArrayList<SMOperatorInitParam.GeneralKey>();
                mutable_bitField0_ |= 0x00000020;
              }
              generalKeys_.add(input.readMessage(SMOperatorInitParam.GeneralKey.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              partitionKey_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              timeLimitMin_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          generalKeys_ = java.util.Collections.unmodifiableList(generalKeys_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SMOperatorInitParam.internal_static_SearchRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SMOperatorInitParam.internal_static_SearchRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SMOperatorInitParam.SearchRequest.class, SMOperatorInitParam.SearchRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<SearchRequest> PARSER =
        new com.google.protobuf.AbstractParser<SearchRequest>() {
      public SearchRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SearchRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SearchRequest> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code SearchRequest.DataSourceImplType}
     */
    public enum DataSourceImplType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>REAL_TIME = 0;</code>
       */
      REAL_TIME(0, 0),
      /**
       * <code>MONGO_GRIDFS = 1;</code>
       */
      MONGO_GRIDFS(1, 1),
      /**
       * <code>HADOOPDFS = 2;</code>
       */
      HADOOPDFS(2, 2),
      ;

      /**
       * <code>REAL_TIME = 0;</code>
       */
      public static final int REAL_TIME_VALUE = 0;
      /**
       * <code>MONGO_GRIDFS = 1;</code>
       */
      public static final int MONGO_GRIDFS_VALUE = 1;
      /**
       * <code>HADOOPDFS = 2;</code>
       */
      public static final int HADOOPDFS_VALUE = 2;


      public final int getNumber() { return value; }

      public static DataSourceImplType valueOf(int value) {
        switch (value) {
          case 0: return REAL_TIME;
          case 1: return MONGO_GRIDFS;
          case 2: return HADOOPDFS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DataSourceImplType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<DataSourceImplType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DataSourceImplType>() {
              public DataSourceImplType findValueByNumber(int number) {
                return DataSourceImplType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return SMOperatorInitParam.SearchRequest.getDescriptor().getEnumTypes().get(0);
      }

      private static final DataSourceImplType[] VALUES = values();

      public static DataSourceImplType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private DataSourceImplType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:SearchRequest.DataSourceImplType)
    }

    /**
     * Protobuf enum {@code SearchRequest.ReadPreferenceType}
     */
    public enum ReadPreferenceType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>READ_ALL = 0;</code>
       */
      READ_ALL(0, 0),
      /**
       * <code>LIST_OF_KEYS = 1;</code>
       */
      LIST_OF_KEYS(1, 1),
      ;

      /**
       * <code>READ_ALL = 0;</code>
       */
      public static final int READ_ALL_VALUE = 0;
      /**
       * <code>LIST_OF_KEYS = 1;</code>
       */
      public static final int LIST_OF_KEYS_VALUE = 1;


      public final int getNumber() { return value; }

      public static ReadPreferenceType valueOf(int value) {
        switch (value) {
          case 0: return READ_ALL;
          case 1: return LIST_OF_KEYS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ReadPreferenceType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ReadPreferenceType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ReadPreferenceType>() {
              public ReadPreferenceType findValueByNumber(int number) {
                return ReadPreferenceType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return SMOperatorInitParam.SearchRequest.getDescriptor().getEnumTypes().get(1);
      }

      private static final ReadPreferenceType[] VALUES = values();

      public static ReadPreferenceType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ReadPreferenceType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:SearchRequest.ReadPreferenceType)
    }

    private int bitField0_;
    // required string host = 1;
    public static final int HOST_FIELD_NUMBER = 1;
    private java.lang.Object host_;
    /**
     * <code>required string host = 1;</code>
     */
    public boolean hasHost() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string host = 1;</code>
     */
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          host_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string host = 1;</code>
     */
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 port = 2;
    public static final int PORT_FIELD_NUMBER = 2;
    private int port_;
    /**
     * <code>required int32 port = 2;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 port = 2;</code>
     */
    public int getPort() {
      return port_;
    }

    // optional string sourceName = 3;
    public static final int SOURCENAME_FIELD_NUMBER = 3;
    private java.lang.Object sourceName_;
    /**
     * <code>optional string sourceName = 3;</code>
     */
    public boolean hasSourceName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string sourceName = 3;</code>
     */
    public java.lang.String getSourceName() {
      java.lang.Object ref = sourceName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sourceName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sourceName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSourceNameBytes() {
      java.lang.Object ref = sourceName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sourceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .SearchRequest.DataSourceImplType dataSourceImplType = 4;
    public static final int DATASOURCEIMPLTYPE_FIELD_NUMBER = 4;
    private SMOperatorInitParam.SearchRequest.DataSourceImplType dataSourceImplType_;
    /**
     * <code>required .SearchRequest.DataSourceImplType dataSourceImplType = 4;</code>
     *
     * <pre>
     * which concrete class should be used
     * </pre>
     */
    public boolean hasDataSourceImplType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .SearchRequest.DataSourceImplType dataSourceImplType = 4;</code>
     *
     * <pre>
     * which concrete class should be used
     * </pre>
     */
    public SMOperatorInitParam.SearchRequest.DataSourceImplType getDataSourceImplType() {
      return dataSourceImplType_;
    }

    // required .SearchRequest.ReadPreferenceType readPreferenceType = 5;
    public static final int READPREFERENCETYPE_FIELD_NUMBER = 5;
    private SMOperatorInitParam.SearchRequest.ReadPreferenceType readPreferenceType_;
    /**
     * <code>required .SearchRequest.ReadPreferenceType readPreferenceType = 5;</code>
     *
     * <pre>
     * read everything (incl. real-time data)
     * </pre>
     */
    public boolean hasReadPreferenceType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .SearchRequest.ReadPreferenceType readPreferenceType = 5;</code>
     *
     * <pre>
     * read everything (incl. real-time data)
     * </pre>
     */
    public SMOperatorInitParam.SearchRequest.ReadPreferenceType getReadPreferenceType() {
      return readPreferenceType_;
    }

    // repeated .GeneralKey generalKeys = 6;
    public static final int GENERALKEYS_FIELD_NUMBER = 6;
    private java.util.List<SMOperatorInitParam.GeneralKey> generalKeys_;
    /**
     * <code>repeated .GeneralKey generalKeys = 6;</code>
     *
     * <pre>
     * list of keys
     * </pre>
     */
    public java.util.List<SMOperatorInitParam.GeneralKey> getGeneralKeysList() {
      return generalKeys_;
    }
    /**
     * <code>repeated .GeneralKey generalKeys = 6;</code>
     *
     * <pre>
     * list of keys
     * </pre>
     */
    public java.util.List<? extends SMOperatorInitParam.GeneralKeyOrBuilder> 
        getGeneralKeysOrBuilderList() {
      return generalKeys_;
    }
    /**
     * <code>repeated .GeneralKey generalKeys = 6;</code>
     *
     * <pre>
     * list of keys
     * </pre>
     */
    public int getGeneralKeysCount() {
      return generalKeys_.size();
    }
    /**
     * <code>repeated .GeneralKey generalKeys = 6;</code>
     *
     * <pre>
     * list of keys
     * </pre>
     */
    public SMOperatorInitParam.GeneralKey getGeneralKeys(int index) {
      return generalKeys_.get(index);
    }
    /**
     * <code>repeated .GeneralKey generalKeys = 6;</code>
     *
     * <pre>
     * list of keys
     * </pre>
     */
    public SMOperatorInitParam.GeneralKeyOrBuilder getGeneralKeysOrBuilder(
        int index) {
      return generalKeys_.get(index);
    }

    // optional int32 partitionKey = 7;
    public static final int PARTITIONKEY_FIELD_NUMBER = 7;
    private int partitionKey_;
    /**
     * <code>optional int32 partitionKey = 7;</code>
     */
    public boolean hasPartitionKey() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 partitionKey = 7;</code>
     */
    public int getPartitionKey() {
      return partitionKey_;
    }

    // optional int32 timeLimitMin = 8;
    public static final int TIMELIMITMIN_FIELD_NUMBER = 8;
    private int timeLimitMin_;
    /**
     * <code>optional int32 timeLimitMin = 8;</code>
     */
    public boolean hasTimeLimitMin() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 timeLimitMin = 8;</code>
     */
    public int getTimeLimitMin() {
      return timeLimitMin_;
    }

    private void initFields() {
      host_ = "";
      port_ = 0;
      sourceName_ = "";
      dataSourceImplType_ = SMOperatorInitParam.SearchRequest.DataSourceImplType.REAL_TIME;
      readPreferenceType_ = SMOperatorInitParam.SearchRequest.ReadPreferenceType.READ_ALL;
      generalKeys_ = java.util.Collections.emptyList();
      partitionKey_ = 0;
      timeLimitMin_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasHost()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDataSourceImplType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasReadPreferenceType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getGeneralKeysCount(); i++) {
        if (!getGeneralKeys(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getHostBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, port_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSourceNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, dataSourceImplType_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, readPreferenceType_.getNumber());
      }
      for (int i = 0; i < generalKeys_.size(); i++) {
        output.writeMessage(6, generalKeys_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, partitionKey_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, timeLimitMin_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHostBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, port_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSourceNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, dataSourceImplType_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, readPreferenceType_.getNumber());
      }
      for (int i = 0; i < generalKeys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, generalKeys_.get(i));
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, partitionKey_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, timeLimitMin_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SMOperatorInitParam.SearchRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SMOperatorInitParam.SearchRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SMOperatorInitParam.SearchRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SMOperatorInitParam.SearchRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SMOperatorInitParam.SearchRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SMOperatorInitParam.SearchRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SMOperatorInitParam.SearchRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SMOperatorInitParam.SearchRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SMOperatorInitParam.SearchRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SMOperatorInitParam.SearchRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SMOperatorInitParam.SearchRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SearchRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements SMOperatorInitParam.SearchRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SMOperatorInitParam.internal_static_SearchRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SMOperatorInitParam.internal_static_SearchRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SMOperatorInitParam.SearchRequest.class, SMOperatorInitParam.SearchRequest.Builder.class);
      }

      // Construct using SMOperatorInitParam.SearchRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGeneralKeysFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        host_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        sourceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        dataSourceImplType_ = SMOperatorInitParam.SearchRequest.DataSourceImplType.REAL_TIME;
        bitField0_ = (bitField0_ & ~0x00000008);
        readPreferenceType_ = SMOperatorInitParam.SearchRequest.ReadPreferenceType.READ_ALL;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (generalKeysBuilder_ == null) {
          generalKeys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          generalKeysBuilder_.clear();
        }
        partitionKey_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        timeLimitMin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SMOperatorInitParam.internal_static_SearchRequest_descriptor;
      }

      public SMOperatorInitParam.SearchRequest getDefaultInstanceForType() {
        return SMOperatorInitParam.SearchRequest.getDefaultInstance();
      }

      public SMOperatorInitParam.SearchRequest build() {
        SMOperatorInitParam.SearchRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SMOperatorInitParam.SearchRequest buildPartial() {
        SMOperatorInitParam.SearchRequest result = new SMOperatorInitParam.SearchRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.host_ = host_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sourceName_ = sourceName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dataSourceImplType_ = dataSourceImplType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.readPreferenceType_ = readPreferenceType_;
        if (generalKeysBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            generalKeys_ = java.util.Collections.unmodifiableList(generalKeys_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.generalKeys_ = generalKeys_;
        } else {
          result.generalKeys_ = generalKeysBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.partitionKey_ = partitionKey_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.timeLimitMin_ = timeLimitMin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SMOperatorInitParam.SearchRequest) {
          return mergeFrom((SMOperatorInitParam.SearchRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SMOperatorInitParam.SearchRequest other) {
        if (other == SMOperatorInitParam.SearchRequest.getDefaultInstance()) return this;
        if (other.hasHost()) {
          bitField0_ |= 0x00000001;
          host_ = other.host_;
          onChanged();
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasSourceName()) {
          bitField0_ |= 0x00000004;
          sourceName_ = other.sourceName_;
          onChanged();
        }
        if (other.hasDataSourceImplType()) {
          setDataSourceImplType(other.getDataSourceImplType());
        }
        if (other.hasReadPreferenceType()) {
          setReadPreferenceType(other.getReadPreferenceType());
        }
        if (generalKeysBuilder_ == null) {
          if (!other.generalKeys_.isEmpty()) {
            if (generalKeys_.isEmpty()) {
              generalKeys_ = other.generalKeys_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureGeneralKeysIsMutable();
              generalKeys_.addAll(other.generalKeys_);
            }
            onChanged();
          }
        } else {
          if (!other.generalKeys_.isEmpty()) {
            if (generalKeysBuilder_.isEmpty()) {
              generalKeysBuilder_.dispose();
              generalKeysBuilder_ = null;
              generalKeys_ = other.generalKeys_;
              bitField0_ = (bitField0_ & ~0x00000020);
              generalKeysBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGeneralKeysFieldBuilder() : null;
            } else {
              generalKeysBuilder_.addAllMessages(other.generalKeys_);
            }
          }
        }
        if (other.hasPartitionKey()) {
          setPartitionKey(other.getPartitionKey());
        }
        if (other.hasTimeLimitMin()) {
          setTimeLimitMin(other.getTimeLimitMin());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasHost()) {
          
          return false;
        }
        if (!hasPort()) {
          
          return false;
        }
        if (!hasDataSourceImplType()) {
          
          return false;
        }
        if (!hasReadPreferenceType()) {
          
          return false;
        }
        for (int i = 0; i < getGeneralKeysCount(); i++) {
          if (!getGeneralKeys(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SMOperatorInitParam.SearchRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SMOperatorInitParam.SearchRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string host = 1;
      private java.lang.Object host_ = "";
      /**
       * <code>required string host = 1;</code>
       */
      public boolean hasHost() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string host = 1;</code>
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          host_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string host = 1;</code>
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string host = 1;</code>
       */
      public Builder setHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        host_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string host = 1;</code>
       */
      public Builder clearHost() {
        bitField0_ = (bitField0_ & ~0x00000001);
        host_ = getDefaultInstance().getHost();
        onChanged();
        return this;
      }
      /**
       * <code>required string host = 1;</code>
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        host_ = value;
        onChanged();
        return this;
      }

      // required int32 port = 2;
      private int port_ ;
      /**
       * <code>required int32 port = 2;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 port = 2;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>required int32 port = 2;</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000002;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 port = 2;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        onChanged();
        return this;
      }

      // optional string sourceName = 3;
      private java.lang.Object sourceName_ = "";
      /**
       * <code>optional string sourceName = 3;</code>
       */
      public boolean hasSourceName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string sourceName = 3;</code>
       */
      public java.lang.String getSourceName() {
        java.lang.Object ref = sourceName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          sourceName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sourceName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSourceNameBytes() {
        java.lang.Object ref = sourceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sourceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sourceName = 3;</code>
       */
      public Builder setSourceName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sourceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sourceName = 3;</code>
       */
      public Builder clearSourceName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sourceName_ = getDefaultInstance().getSourceName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sourceName = 3;</code>
       */
      public Builder setSourceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sourceName_ = value;
        onChanged();
        return this;
      }

      // required .SearchRequest.DataSourceImplType dataSourceImplType = 4;
      private SMOperatorInitParam.SearchRequest.DataSourceImplType dataSourceImplType_ = SMOperatorInitParam.SearchRequest.DataSourceImplType.REAL_TIME;
      /**
       * <code>required .SearchRequest.DataSourceImplType dataSourceImplType = 4;</code>
       *
       * <pre>
       * which concrete class should be used
       * </pre>
       */
      public boolean hasDataSourceImplType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .SearchRequest.DataSourceImplType dataSourceImplType = 4;</code>
       *
       * <pre>
       * which concrete class should be used
       * </pre>
       */
      public SMOperatorInitParam.SearchRequest.DataSourceImplType getDataSourceImplType() {
        return dataSourceImplType_;
      }
      /**
       * <code>required .SearchRequest.DataSourceImplType dataSourceImplType = 4;</code>
       *
       * <pre>
       * which concrete class should be used
       * </pre>
       */
      public Builder setDataSourceImplType(SMOperatorInitParam.SearchRequest.DataSourceImplType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        dataSourceImplType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .SearchRequest.DataSourceImplType dataSourceImplType = 4;</code>
       *
       * <pre>
       * which concrete class should be used
       * </pre>
       */
      public Builder clearDataSourceImplType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dataSourceImplType_ = SMOperatorInitParam.SearchRequest.DataSourceImplType.REAL_TIME;
        onChanged();
        return this;
      }

      // required .SearchRequest.ReadPreferenceType readPreferenceType = 5;
      private SMOperatorInitParam.SearchRequest.ReadPreferenceType readPreferenceType_ = SMOperatorInitParam.SearchRequest.ReadPreferenceType.READ_ALL;
      /**
       * <code>required .SearchRequest.ReadPreferenceType readPreferenceType = 5;</code>
       *
       * <pre>
       * read everything (incl. real-time data)
       * </pre>
       */
      public boolean hasReadPreferenceType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .SearchRequest.ReadPreferenceType readPreferenceType = 5;</code>
       *
       * <pre>
       * read everything (incl. real-time data)
       * </pre>
       */
      public SMOperatorInitParam.SearchRequest.ReadPreferenceType getReadPreferenceType() {
        return readPreferenceType_;
      }
      /**
       * <code>required .SearchRequest.ReadPreferenceType readPreferenceType = 5;</code>
       *
       * <pre>
       * read everything (incl. real-time data)
       * </pre>
       */
      public Builder setReadPreferenceType(SMOperatorInitParam.SearchRequest.ReadPreferenceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        readPreferenceType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .SearchRequest.ReadPreferenceType readPreferenceType = 5;</code>
       *
       * <pre>
       * read everything (incl. real-time data)
       * </pre>
       */
      public Builder clearReadPreferenceType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        readPreferenceType_ = SMOperatorInitParam.SearchRequest.ReadPreferenceType.READ_ALL;
        onChanged();
        return this;
      }

      // repeated .GeneralKey generalKeys = 6;
      private java.util.List<SMOperatorInitParam.GeneralKey> generalKeys_ =
        java.util.Collections.emptyList();
      private void ensureGeneralKeysIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          generalKeys_ = new java.util.ArrayList<SMOperatorInitParam.GeneralKey>(generalKeys_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          SMOperatorInitParam.GeneralKey, SMOperatorInitParam.GeneralKey.Builder, SMOperatorInitParam.GeneralKeyOrBuilder> generalKeysBuilder_;

      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public java.util.List<SMOperatorInitParam.GeneralKey> getGeneralKeysList() {
        if (generalKeysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(generalKeys_);
        } else {
          return generalKeysBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public int getGeneralKeysCount() {
        if (generalKeysBuilder_ == null) {
          return generalKeys_.size();
        } else {
          return generalKeysBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public SMOperatorInitParam.GeneralKey getGeneralKeys(int index) {
        if (generalKeysBuilder_ == null) {
          return generalKeys_.get(index);
        } else {
          return generalKeysBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public Builder setGeneralKeys(
          int index, SMOperatorInitParam.GeneralKey value) {
        if (generalKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeneralKeysIsMutable();
          generalKeys_.set(index, value);
          onChanged();
        } else {
          generalKeysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public Builder setGeneralKeys(
          int index, SMOperatorInitParam.GeneralKey.Builder builderForValue) {
        if (generalKeysBuilder_ == null) {
          ensureGeneralKeysIsMutable();
          generalKeys_.set(index, builderForValue.build());
          onChanged();
        } else {
          generalKeysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public Builder addGeneralKeys(SMOperatorInitParam.GeneralKey value) {
        if (generalKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeneralKeysIsMutable();
          generalKeys_.add(value);
          onChanged();
        } else {
          generalKeysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public Builder addGeneralKeys(
          int index, SMOperatorInitParam.GeneralKey value) {
        if (generalKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeneralKeysIsMutable();
          generalKeys_.add(index, value);
          onChanged();
        } else {
          generalKeysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public Builder addGeneralKeys(
          SMOperatorInitParam.GeneralKey.Builder builderForValue) {
        if (generalKeysBuilder_ == null) {
          ensureGeneralKeysIsMutable();
          generalKeys_.add(builderForValue.build());
          onChanged();
        } else {
          generalKeysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public Builder addGeneralKeys(
          int index, SMOperatorInitParam.GeneralKey.Builder builderForValue) {
        if (generalKeysBuilder_ == null) {
          ensureGeneralKeysIsMutable();
          generalKeys_.add(index, builderForValue.build());
          onChanged();
        } else {
          generalKeysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public Builder addAllGeneralKeys(
          java.lang.Iterable<? extends SMOperatorInitParam.GeneralKey> values) {
        if (generalKeysBuilder_ == null) {
          ensureGeneralKeysIsMutable();
          super.addAll(values, generalKeys_);
          onChanged();
        } else {
          generalKeysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public Builder clearGeneralKeys() {
        if (generalKeysBuilder_ == null) {
          generalKeys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          generalKeysBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public Builder removeGeneralKeys(int index) {
        if (generalKeysBuilder_ == null) {
          ensureGeneralKeysIsMutable();
          generalKeys_.remove(index);
          onChanged();
        } else {
          generalKeysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public SMOperatorInitParam.GeneralKey.Builder getGeneralKeysBuilder(
          int index) {
        return getGeneralKeysFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public SMOperatorInitParam.GeneralKeyOrBuilder getGeneralKeysOrBuilder(
          int index) {
        if (generalKeysBuilder_ == null) {
          return generalKeys_.get(index);  } else {
          return generalKeysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public java.util.List<? extends SMOperatorInitParam.GeneralKeyOrBuilder> 
           getGeneralKeysOrBuilderList() {
        if (generalKeysBuilder_ != null) {
          return generalKeysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(generalKeys_);
        }
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public SMOperatorInitParam.GeneralKey.Builder addGeneralKeysBuilder() {
        return getGeneralKeysFieldBuilder().addBuilder(
            SMOperatorInitParam.GeneralKey.getDefaultInstance());
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public SMOperatorInitParam.GeneralKey.Builder addGeneralKeysBuilder(
          int index) {
        return getGeneralKeysFieldBuilder().addBuilder(
            index, SMOperatorInitParam.GeneralKey.getDefaultInstance());
      }
      /**
       * <code>repeated .GeneralKey generalKeys = 6;</code>
       *
       * <pre>
       * list of keys
       * </pre>
       */
      public java.util.List<SMOperatorInitParam.GeneralKey.Builder> 
           getGeneralKeysBuilderList() {
        return getGeneralKeysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          SMOperatorInitParam.GeneralKey, SMOperatorInitParam.GeneralKey.Builder, SMOperatorInitParam.GeneralKeyOrBuilder> 
          getGeneralKeysFieldBuilder() {
        if (generalKeysBuilder_ == null) {
          generalKeysBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              SMOperatorInitParam.GeneralKey, SMOperatorInitParam.GeneralKey.Builder, SMOperatorInitParam.GeneralKeyOrBuilder>(
                  generalKeys_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          generalKeys_ = null;
        }
        return generalKeysBuilder_;
      }

      // optional int32 partitionKey = 7;
      private int partitionKey_ ;
      /**
       * <code>optional int32 partitionKey = 7;</code>
       */
      public boolean hasPartitionKey() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 partitionKey = 7;</code>
       */
      public int getPartitionKey() {
        return partitionKey_;
      }
      /**
       * <code>optional int32 partitionKey = 7;</code>
       */
      public Builder setPartitionKey(int value) {
        bitField0_ |= 0x00000040;
        partitionKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 partitionKey = 7;</code>
       */
      public Builder clearPartitionKey() {
        bitField0_ = (bitField0_ & ~0x00000040);
        partitionKey_ = 0;
        onChanged();
        return this;
      }

      // optional int32 timeLimitMin = 8;
      private int timeLimitMin_ ;
      /**
       * <code>optional int32 timeLimitMin = 8;</code>
       */
      public boolean hasTimeLimitMin() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 timeLimitMin = 8;</code>
       */
      public int getTimeLimitMin() {
        return timeLimitMin_;
      }
      /**
       * <code>optional int32 timeLimitMin = 8;</code>
       */
      public Builder setTimeLimitMin(int value) {
        bitField0_ |= 0x00000080;
        timeLimitMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 timeLimitMin = 8;</code>
       */
      public Builder clearTimeLimitMin() {
        bitField0_ = (bitField0_ & ~0x00000080);
        timeLimitMin_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SearchRequest)
    }

    static {
      defaultInstance = new SearchRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SearchRequest)
  }

  public interface GeneralKeyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string name = 1;
    /**
     * <code>required string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int64 first = 2;
    /**
     * <code>optional int64 first = 2;</code>
     */
    boolean hasFirst();
    /**
     * <code>optional int64 first = 2;</code>
     */
    long getFirst();

    // optional int64 last = 3;
    /**
     * <code>optional int64 last = 3;</code>
     */
    boolean hasLast();
    /**
     * <code>optional int64 last = 3;</code>
     */
    long getLast();
  }
  /**
   * Protobuf type {@code GeneralKey}
   */
  public static final class GeneralKey extends
      com.google.protobuf.GeneratedMessage
      implements GeneralKeyOrBuilder {
    // Use GeneralKey.newBuilder() to construct.
    private GeneralKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GeneralKey(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GeneralKey defaultInstance;
    public static GeneralKey getDefaultInstance() {
      return defaultInstance;
    }

    public GeneralKey getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GeneralKey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              first_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              last_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SMOperatorInitParam.internal_static_GeneralKey_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SMOperatorInitParam.internal_static_GeneralKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SMOperatorInitParam.GeneralKey.class, SMOperatorInitParam.GeneralKey.Builder.class);
    }

    public static com.google.protobuf.Parser<GeneralKey> PARSER =
        new com.google.protobuf.AbstractParser<GeneralKey>() {
      public GeneralKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GeneralKey(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GeneralKey> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 first = 2;
    public static final int FIRST_FIELD_NUMBER = 2;
    private long first_;
    /**
     * <code>optional int64 first = 2;</code>
     */
    public boolean hasFirst() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int64 first = 2;</code>
     */
    public long getFirst() {
      return first_;
    }

    // optional int64 last = 3;
    public static final int LAST_FIELD_NUMBER = 3;
    private long last_;
    /**
     * <code>optional int64 last = 3;</code>
     */
    public boolean hasLast() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int64 last = 3;</code>
     */
    public long getLast() {
      return last_;
    }

    private void initFields() {
      name_ = "";
      first_ = 0L;
      last_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, first_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, last_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, first_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, last_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SMOperatorInitParam.GeneralKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SMOperatorInitParam.GeneralKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SMOperatorInitParam.GeneralKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SMOperatorInitParam.GeneralKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SMOperatorInitParam.GeneralKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SMOperatorInitParam.GeneralKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SMOperatorInitParam.GeneralKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SMOperatorInitParam.GeneralKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SMOperatorInitParam.GeneralKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SMOperatorInitParam.GeneralKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SMOperatorInitParam.GeneralKey prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GeneralKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements SMOperatorInitParam.GeneralKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SMOperatorInitParam.internal_static_GeneralKey_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SMOperatorInitParam.internal_static_GeneralKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SMOperatorInitParam.GeneralKey.class, SMOperatorInitParam.GeneralKey.Builder.class);
      }

      // Construct using SMOperatorInitParam.GeneralKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        first_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        last_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SMOperatorInitParam.internal_static_GeneralKey_descriptor;
      }

      public SMOperatorInitParam.GeneralKey getDefaultInstanceForType() {
        return SMOperatorInitParam.GeneralKey.getDefaultInstance();
      }

      public SMOperatorInitParam.GeneralKey build() {
        SMOperatorInitParam.GeneralKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SMOperatorInitParam.GeneralKey buildPartial() {
        SMOperatorInitParam.GeneralKey result = new SMOperatorInitParam.GeneralKey(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.first_ = first_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.last_ = last_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SMOperatorInitParam.GeneralKey) {
          return mergeFrom((SMOperatorInitParam.GeneralKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SMOperatorInitParam.GeneralKey other) {
        if (other == SMOperatorInitParam.GeneralKey.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasFirst()) {
          setFirst(other.getFirst());
        }
        if (other.hasLast()) {
          setLast(other.getLast());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SMOperatorInitParam.GeneralKey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SMOperatorInitParam.GeneralKey) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int64 first = 2;
      private long first_ ;
      /**
       * <code>optional int64 first = 2;</code>
       */
      public boolean hasFirst() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 first = 2;</code>
       */
      public long getFirst() {
        return first_;
      }
      /**
       * <code>optional int64 first = 2;</code>
       */
      public Builder setFirst(long value) {
        bitField0_ |= 0x00000002;
        first_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 first = 2;</code>
       */
      public Builder clearFirst() {
        bitField0_ = (bitField0_ & ~0x00000002);
        first_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 last = 3;
      private long last_ ;
      /**
       * <code>optional int64 last = 3;</code>
       */
      public boolean hasLast() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 last = 3;</code>
       */
      public long getLast() {
        return last_;
      }
      /**
       * <code>optional int64 last = 3;</code>
       */
      public Builder setLast(long value) {
        bitField0_ |= 0x00000004;
        last_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 last = 3;</code>
       */
      public Builder clearLast() {
        bitField0_ = (bitField0_ & ~0x00000004);
        last_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:GeneralKey)
    }

    static {
      defaultInstance = new GeneralKey(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GeneralKey)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SearchRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SearchRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_GeneralKey_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GeneralKey_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031SMOperatorInitParam.proto\"\207\003\n\rSearchRe" +
      "quest\022\014\n\004host\030\001 \002(\t\022\014\n\004port\030\002 \002(\005\022\022\n\nsou" +
      "rceName\030\003 \001(\t\022=\n\022dataSourceImplType\030\004 \002(" +
      "\0162!.SearchRequest.DataSourceImplType\022=\n\022" +
      "readPreferenceType\030\005 \002(\0162!.SearchRequest" +
      ".ReadPreferenceType\022 \n\013generalKeys\030\006 \003(\013" +
      "2\013.GeneralKey\022\024\n\014partitionKey\030\007 \001(\005\022\024\n\014t" +
      "imeLimitMin\030\010 \001(\005\"D\n\022DataSourceImplType\022" +
      "\r\n\tREAL_TIME\020\000\022\020\n\014MONGO_GRIDFS\020\001\022\r\n\tHADO" +
      "OPDFS\020\002\"4\n\022ReadPreferenceType\022\014\n\010READ_AL",
      "L\020\000\022\020\n\014LIST_OF_KEYS\020\001\"7\n\nGeneralKey\022\014\n\004n" +
      "ame\030\001 \002(\t\022\r\n\005first\030\002 \001(\003\022\014\n\004last\030\003 \001(\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_SearchRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_SearchRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SearchRequest_descriptor,
              new java.lang.String[] { "Host", "Port", "SourceName", "DataSourceImplType", "ReadPreferenceType", "GeneralKeys", "PartitionKey", "TimeLimitMin", });
          internal_static_GeneralKey_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_GeneralKey_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_GeneralKey_descriptor,
              new java.lang.String[] { "Name", "First", "Last", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
